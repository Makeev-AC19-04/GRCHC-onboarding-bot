import sql_requests
from aiogram import Bot, Dispatcher, types, executor
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardRemove, \
    ReplyKeyboardMarkup, KeyboardButton, \
    InlineKeyboardMarkup, InlineKeyboardButton
import asyncio
import re

token = '5570755905:AAHG6lllgMm8rOBHrm2sLHN9pp487BZh_Mk'  # —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
bot = Bot(token=token)
dp = Dispatcher(bot)


async def main(message: types.Message):  # –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –æ—Ç–≤–µ—á–∞—é—â–∞—è –∑–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    ###     –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞, –Ω–µ–¥–µ–ª—è –¥–æ –≤—ã—Ö–æ–¥–∞       ###
    await ask_name(message)  # –£–∑–Ω–∞–µ–º –∏–º—è
    while sql_requests.get_status(message.from_user.username) == 'naming':
        print('waiting for name: ' + message.from_user.username)
        await asyncio.sleep(9)  # –ñ–¥–µ–º –ø–æ–∫–∞ –∏–º—è –Ω–µ –±—É–¥–µ—Ç —É–∫–∞–∑–∞–Ω–æ
    #await bot.send_message(message.chat.id,  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏
     #                      sql_requests.get_subdvsn(message.from_user.username))
    await asyncio.sleep(9)
    await bot.send_photo(chat_id=message.chat.id, photo=open('pics/docs to take.jpg', 'rb'))
    await asyncio.sleep(9)
    await bot.send_photo(chat_id=message.chat.id, photo=open('pics/meal.jpg', 'rb'), caption='–ù–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –±–∏–∑–Ω–µ—Å-—Ü–µ–Ω—Ç—Ä–∞ –µ—Å—Ç—å –º–Ω–æ–≥–æ –∫–∞—Ñ–µ –∏ –∑–æ–Ω –æ—Ç–¥—ã—Ö–∞, –Ω–æ —è —Ä–µ–∫–æ–º–µ–Ω–¥—É—é:\n'\
                                                                                        '–í –∫–æ—Ä–ø—É—Å–µ 12 StandUp&Action\n'\
                                                                                        '–í –∫–æ—Ä–ø—É—Å–µ 17 Prime\n'\
                                                                                        '–í –∫–æ—Ä–ø—É—Å–µ 22 –ê—Ç—Ä–∏—É–º\n'\
                                                                                        '–ï—Å–ª–∏ –ø–æ–ª—é–±–∏—Ç—Å—è –¥—Ä—É–≥–æ–µ –º–µ—Å—Ç–µ—á–∫–æ - –¥–µ–ª–∏—Å—å —Å–æ –º–Ω–æ–πüòâ')
    await asyncio.sleep(20)
    ###      –î–µ–Ω—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è       ###
    await bot.send_photo(chat_id=message.chat.id, photo=open('pics/channels.jpg', 'rb'))
    await asyncio.sleep(10)
    #await bot.send_message(chat_id=message.chat.id, text=sql_requests.get_hr(message.from_user.username))
    await asyncio.sleep(10)
    await ask_survey_1(message)  # –°—Ä–æ—à–∏–≤–∞–µ–º, –∂–µ–ª–∞–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ–π—Ç–∏ –æ–ø—Ä–æ—Å
    while sql_requests.get_status(message.from_user.username) == 'waiting':
        await asyncio.sleep(5)
        print('waiting: ' + message.from_user.username)
    if sql_requests.get_status(message.from_user.username) == 'survey 1.1':
        await survey_1(message.chat.id, message.from_user.username)
    await asyncio.sleep(10)
    ###      3 –¥–µ–Ω—å —Ä–∞–±–æ—Ç—ã       ###
    #await bot.send_message(chat_id=message.chat.id, text=sql_requests.get_task(message.from_user.username))
    await asyncio.sleep(10)
    ###      1 –Ω–µ–¥–µ–ª—è      ###
    await bot.send_photo(chat_id=message.chat.id, photo=open('pics/exemptions.jpg', 'rb'))
    await asyncio.sleep(10)
    ###      1 –º–µ—Å—è—Ü      ###
    await bot.send_photo(chat_id=message.chat.id, photo=open('pics/1month.jpg', 'rb'))
    await asyncio.sleep(10)
    await ask_survey_1(message)  # –°—Ä–æ—à–∏–≤–∞–µ–º, –∂–µ–ª–∞–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ–π—Ç–∏ –æ–ø—Ä–æ—Å
    while sql_requests.get_status(message.from_user.username) == 'waiting':
        await asyncio.sleep(5)
        print('waiting: ' + message.from_user.username)
    if sql_requests.get_status(message.from_user.username) == 'survey 1.1':
        await survey_1(message.chat.id, message.from_user.username)
    ###      2 –º–µ—Å—è—Ü      ###
    await bot.send_photo(chat_id=message.chat.id, photo=open('pics/1month.jpg', 'rb'))
    await asyncio.sleep(10)
    await ask_survey_1(message)  # –°—Ä–æ—à–∏–≤–∞–µ–º, –∂–µ–ª–∞–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ–π—Ç–∏ –æ–ø—Ä–æ—Å
    while sql_requests.get_status(message.from_user.username) == 'waiting':
        await asyncio.sleep(5)
        print('waiting: ' + message.from_user.username)
    if sql_requests.get_status(message.from_user.username) == 'survey 1.1':
        await survey_1(message.chat.id, message.from_user.username)
    ###      3 –º–µ—Å—è—Ü, –∫–æ–Ω–µ—Ü –∏—Å–ø—ã—Ç–∞—Ç–µ–ª—å–Ω–æ–≥–æ —Å—Ä–æ–∫–∞      ###
    await bot.send_photo(chat_id=message.chat.id, photo=open('pics/theend.jpg', 'rb'))

@dp.message_handler(commands=['start'])
async def welcome(message: types.Message):
    role = sql_requests.define_role(message)  # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–æ–ª—å
    if role == 'HR':
        bot.send_message(message.chat.id, '–ñ–¥–∏—Ç–µ –∑–∞—è–≤–æ–∫ –Ω–∞ –¥–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É')
    elif role == 'user':
        if sql_requests.get_status(message.from_user.username) == 'none':
            sql_requests.set_status(message.from_user.username, 'started')
            await bot.send_photo(chat_id=message.chat.id, photo=open('pics/welcome.jpg', 'rb'))
            await main(message)
        else:
            await bot.send_message(message.chat.id, '–ë–æ—Ç —É–∂–µ –∑–∞–ø—É—â–µ–Ω')
    else:
        button_hi = KeyboardButton('–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É')
        greet_kb = ReplyKeyboardMarkup()
        greet_kb.add(button_hi)
        sql_requests.add_request(message.from_user.username, message.chat.id)
        await bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç! –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∫ –±–æ—Ç—É –æ—Å—Ç–∞–≤—å –∑–∞—è–≤–∫—É', reply_markup=greet_kb)


@dp.message_handler(commands=['setname'])
async def ask_name(message: types.Message):
    sql_requests.set_status(message.from_user.username, 'naming')
    inline_btn_1 = InlineKeyboardButton('–ö–∞–∫ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º–µ', callback_data='as in telegram')
    inline_btn_2 = InlineKeyboardButton('–í–≤–µ—Å—Ç–∏ –Ω–æ–≤–æ–µ', callback_data='new name')
    inline_kb_full = InlineKeyboardMarkup().add(inline_btn_1, inline_btn_2)
    await bot.send_message(message.chat.id, '–ö–∞–∫ —è —Å–º–æ–≥—É –∫ —Ç–µ–±–µ –æ–±—Ä–∞—â–∞—Ç—å—Å—è?', reply_markup=inline_kb_full)


@dp.message_handler(commands=['survey'])
async def ask_survey_1(message):  # –°–ø—Ä–∞—à–∏–≤–∞–µ–º, –∂–µ–ª–∞–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ–π—Ç–∏ –æ–ø—Ä–æ—Å
    sql_requests.set_status(message.from_user.username, 'waiting')
    markup = types.InlineKeyboardMarkup()
    item1 = types.InlineKeyboardButton("–ù–∞—á–∞—Ç—å –æ–ø—Ä–æ—Å", callback_data='start survey')
    item2 = types.InlineKeyboardButton("–°–ø–∞—Å–∏–±–æ, –Ω–µ—Ç", callback_data='cancel survey')
    markup.row(item1, item2)
    name = sql_requests.get_name(message.from_user.username)
    await bot.send_photo(message.chat.id, photo=open('pics/survey1.jpg','rb'), reply_markup=markup)


async def survey_1(chat_id, user):
    markup1 = types.InlineKeyboardMarkup()
    item11 = types.InlineKeyboardButton("–í—Å–µ –æ—Ç–ª–∏—á–Ω–æ!üëç", callback_data='1.1')
    item12 = types.InlineKeyboardButton("–û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ãü§î", callback_data='1.2')
    item13 = types.InlineKeyboardButton("–ù–∏—á–µ–≥–æ –Ω–µ –ø–æ–Ω—è–ª, —á—Ç–æ –ø–æ–¥–ø–∏—Å—ã–≤–∞–ªüôà", callback_data='1.3')
    markup1.add(item11)
    markup1.add(item12)
    markup1.add(item13)

    markup2 = types.InlineKeyboardMarkup()
    item21 = types.InlineKeyboardButton("–û—Ç–ª–∏—á–Ω–æ!üéâ", callback_data='2.1')
    item22 = types.InlineKeyboardButton("–ü–æ–∫–∞ –ø—Ä–∏—Å–º–∞—Ç—Ä–∏–≤–∞—é—Å—åü•∑", callback_data='2.2')
    item23 = types.InlineKeyboardButton("–ù–∏–∫–∞–∫, –≤—Å–µ –∑–∞–Ω—è—Ç—ãüë®‚Äçüíª", callback_data='2.3')
    markup2.add(item21)
    markup2.add(item22)
    markup2.add(item23)

    markups = {'1':markup1, '2':markup2}

    questions = {'1': '–ë—ã–ª–∏ –ª–∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏?',
                 '2': '–ö–∞–∫ —Ç–µ–±—è –≤—Å—Ç—Ä–µ—Ç–∏–ª–∏ –Ω–æ–≤—ã–µ –∫–æ–ª–ª–µ–≥–∏?'}
    for i in questions:
        await bot.send_message(chat_id, questions[i], reply_markup=markups[i])  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω—É–∂–Ω—ã–π –≤–æ–ø—Ä–æ—Å
        # sql_requests.set_status(message.from_user.username, 'survey 1.' + i) # –ó–∞–¥–∞–µ–º —Å—Ç–∞—Ç—É—Å —Å –Ω–æ–º–µ—Ä–æ–º –≤–æ–ø—Ä–æ—Å–∞
        while sql_requests.get_status(user) == 'survey 1.' + i:  # –ñ–¥–µ–º –ø–æ–∫–∞ –Ω–µ –ø–æ–ª—É—á–∏–º –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —Ç–µ–∫—É—â–∏–π –≤–æ–ø—Ä–æ—Å
            await asyncio.sleep(2)
        #bot.edit_message_text(chat_id, )
    await bot.send_message(chat_id, "–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤!")


async def add_hr(message):  # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ hr –≤ –ë–î
    response = sql_requests.add_hr(message)
    await bot.send_message(chat_id=message.chat.id, text=response)


async def set_name(message):
    sql_requests.set_name(message.text, message.from_user.username)
    message_set_name = '–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, ' + message.text + '!\n–î–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–º–µ–Ω–∏ –≤–≤–µ–¥–∏ /setname'
    await bot.send_message(chat_id=message.chat.id, text=message_set_name)
    sql_requests.set_status(message.from_user.username, 'going')


def add_user(message):
    response = ''
    if sql_requests.check_hr(message) == 1:  # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —á–µ–ª–æ–≤–µ–∫ —ç–π—á–∞—Ä–æ–º
        response = sql_requests.add_user(message)
    else:
        response = '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤–∞ –¥–æ–±–∞–≤–ª—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
    bot.send_message(chat_id=message.chat.id, text=response)


@dp.message_handler(content_types=['text'])
async def message_handler(message):
    role = sql_requests.define_role(message)
    if 'q3x9Z2K79D2' in message.text:
        sql_requests.add_task(message)
    elif '–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É' in message.text:
        markup1 = types.InlineKeyboardMarkup()
        item1 = types.InlineKeyboardButton("–ü—Ä–∏–Ω—è—Ç—å", callback_data='add user')
        item2 = types.InlineKeyboardButton("–û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data='ignore user')
        markup1.add(item1, item2)
        await bot.send_message(sql_requests.get_hr(), "–ó–∞—è–≤–∫–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @" + message.from_user.username, reply_markup=markup1)  # like this
        await bot.send_message(message.from_user.id, "–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞, –∂–¥–∏—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è", reply_markup = ReplyKeyboardRemove())  # like this
        sql_requests.add_request(message.from_user.username, message.chat.id)
    if role == 'HR':
        if '/>:swgPDGq:3Ce' in message.text:
            add_user(message)
    elif role == 'guest':
        if 'V<S<=2hjr/ptgQ=' in message.text:
            await add_hr(message)
            await bot.send_message(message.chat.id, "–¢–µ–ø–µ—Ä—å –≤—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç–µ –∑–∞–ø—Ä–æ—Å—ã: "+role)  # like this
    elif role == 'user':
        status = sql_requests.get_status(message.from_user.username)
        if status == 'naming':
            await set_name(message)
        elif '–ù–∞—á–∞—Ç—å' in message.text and sql_requests.get_status(message.from_user.username) == 'none':
            main(message)
    # elif 'survey' in status:
        #     if status == 'survey 1.1':
        #         sql_requests.add_survey(message.from_user.username, '1', message.text)
        #         sql_requests.set_status(message.from_user.username, 'survey 1.2')
        #     if status == 'survey 1.2':
        #         sql_requests.set_survey(message.from_user.username, '1', '2', message.text)
        #         sql_requests.set_status(message.from_user.username, 'survey 1.3')
        #     if status == 'survey 1.3':
        #         sql_requests.set_survey(message.from_user.username, '1', '3', message.text)
        #         sql_requests.set_status(message.from_user.username, 'survey 1.4')
        #     if status == 'survey 1.4':
        #         sql_requests.set_survey(message.from_user.username, '1', '4', message.text)
        #         sql_requests.set_status(message.from_user.username, 'survey 2')
        #else:
         #   bot.send_message(message.chat.id, '–ü–æ—Ä–∞ –ø—Ä–æ–π—Ç–∏ –æ–ø—Ä–æ—Å')

@dp.callback_query_handler(text=['add user', 'ignore user'])
async def add_user(call: types.CallbackQuery):
    if call.data == 'add user':
        user = re.split(' ', call.message.text)
        sql_requests.add_user(user[-1])
        await call.message.edit_text(text='–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ' + user[-1] + ' –¥–æ–±–∞–≤–ª–µ–Ω',
                               reply_markup=None)
        button_start = KeyboardButton('–ù–∞—á–∞—Ç—å')
        greet_kb = ReplyKeyboardMarkup()
        greet_kb.add(button_start)
        await bot.send_message(chat_id=sql_requests.get_request(user[-1]), text='–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, —Ç—ã –º–æ–∂–µ—à—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º! –Ω–∞–∂–º–∏ /start', reply_markup=button_start)
    else:
        user = re.split(' ', call.message.text)
        await call.message.edit_text(text='–ó–∞—è–≤–∫–∞ –æ—Ç ' + user[-1] + ' –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞',
                               reply_markup=None)
    sql_requests.del_request(user[-1])


@dp.callback_query_handler(text=['as in telegram', 'new name'])
async def callback_inline(call: types.CallbackQuery):
    message_set_name = ''
    if call.data == 'as in telegram':
        sql_requests.set_name(call.from_user.first_name, call.from_user.username)
        sql_requests.set_status(call.from_user.username, 'going')
        await call.message.delete()
        message_set_name = '–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, ' + call.from_user.first_name + '!\n–î–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–º–µ–Ω–∏ –≤–≤–µ–¥–∏ /setname'
        await bot.send_message(call.message.chat.id, message_set_name)
    elif call.data == 'new name':
        message_set_name = '–í–≤–µ–¥–∏ –Ω–æ–≤–æ–µ –∏–º—è'
        sql_requests.set_status(call.from_user.username, 'naming')
        await call.message.delete()
        await bot.send_message(call.message.chat.id, message_set_name)


@dp.callback_query_handler(text=['start survey', 'cancel survey'])
async def callback_inline(call: types.CallbackQuery):
    message_set_name = ''
    if call.data == 'start survey':
        message_set_name = '–ù–∞—á–∏–Ω–∞–µ–º –æ–ø—Ä–æ—Å'
        sql_requests.set_status(call.from_user.username, 'survey 1.1')
    else:
        message_set_name = '–û—Ç–º–µ–Ω—è–µ–º –æ–ø—Ä–æ—Å'
        sql_requests.set_status(call.from_user.username, 'survey 2')
    await bot.edit_message_reply_markup(chat_id=call.message.chat.id, message_id=call.message.message_id, reply_markup=None)

@dp.callback_query_handler(text=['1.1', '1.2', '1.3', '2.1', '2.2', '2.3'])
async def callback_inline(call: types.CallbackQuery):
    if call.data == '1.1':
        sql_requests.add_survey(call.from_user.username, '1', '–í—Å–µ –æ—Ç–ª–∏—á–Ω–æ')
        sql_requests.set_status(call.from_user.username, 'survey 1.2')
        await call.message.delete()
    elif call.data == '1.2':
        sql_requests.add_survey(call.from_user.username, '1', '–û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã')
        sql_requests.set_status(call.from_user.username, 'survey 1.2')
        await call.message.delete()
    elif call.data == '1.3':
        sql_requests.add_survey(call.from_user.username, '1', '–ù–∏—á–µ–≥–æ –Ω–µ –ø–æ–Ω—è–ª, —á—Ç–æ –ø–æ–¥–ø–∏—Å—ã–≤–∞–ª')
        sql_requests.set_status(call.from_user.username, 'survey 1.2')
        await call.message.delete()
    elif call.data == '2.1':
        sql_requests.set_survey(call.from_user.username, '1', '2', '–û—Ç–ª–∏—á–Ω–æ')
        sql_requests.set_status(call.from_user.username, 'survey 2')
        await call.message.delete()
    elif call.data == '2.2':
        sql_requests.set_survey(call.from_user.username, '1', '2', '–ü–æ–∫–∞ –ø—Ä–∏—Å–º–∞—Ç—Ä–∏–≤–∞—é—Å—å')
        sql_requests.set_status(call.from_user.username, 'survey 2')
        await call.message.delete()
    elif call.data == '2.3':
        sql_requests.set_survey(call.from_user.username, '1', '2', '–ù–∏–∫–∞–∫, –≤—Å–µ –∑–∞–Ω—è—Ç—ã')
        sql_requests.set_status(call.from_user.username, 'survey 2')
        await call.message.delete()
# dp.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=message_set_name.format(call.message.from_user, bot.get_me()),
# parse_mode='html',reply_markup=None)

if __name__ == '__main__':
    executor.start_polling(dp)
